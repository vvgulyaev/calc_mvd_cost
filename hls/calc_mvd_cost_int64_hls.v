// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="calc_mvd_cost_int64_hls_calc_mvd_cost_int64_hls,hls_ip_2023_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu19p-fsvb3824-2-e,HLS_INPUT_CLOCK=3.300000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=2.401637,HLS_SYN_LAT=9,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1713,HLS_SYN_LUT=4260,HLS_VERSION=2023_2}" *)

module calc_mvd_cost_int64_hls (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ap_ce,
        ap_core,
        ap_part,
        ap_parent,
        x,
        y,
        mv_shift,
        mv_cand_0,
        mv_cand_1,
        mv_cand_2,
        mv_cand_3,
        bitcost,
        bitcost_ap_vld,
        lambda_sqrt_integer_int64,
        lambda_sqrt_decimal_int64,
        mvd_cost_int64,
        mvd_cost_int64_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   ap_ce;
input  [7:0] ap_core;
input  [7:0] ap_part;
input  [7:0] ap_parent;
input  [31:0] x;
input  [31:0] y;
input  [31:0] mv_shift;
input  [15:0] mv_cand_0;
input  [15:0] mv_cand_1;
input  [15:0] mv_cand_2;
input  [15:0] mv_cand_3;
output  [63:0] bitcost;
output   bitcost_ap_vld;
input  [63:0] lambda_sqrt_integer_int64;
input  [63:0] lambda_sqrt_decimal_int64;
output  [63:0] mvd_cost_int64;
output   mvd_cost_int64_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg bitcost_ap_vld;
reg mvd_cost_int64_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_idle_pp0;
reg    ap_block_pp0_stage0_subdone;
reg  signed [63:0] lambda_sqrt_decimal_int64_read_reg_1771;
wire    ap_block_pp0_stage0_11001;
reg  signed [63:0] lambda_sqrt_decimal_int64_read_reg_1771_pp0_iter1_reg;
reg  signed [63:0] lambda_sqrt_decimal_int64_read_reg_1771_pp0_iter2_reg;
reg  signed [63:0] lambda_sqrt_decimal_int64_read_reg_1771_pp0_iter3_reg;
reg  signed [63:0] lambda_sqrt_integer_int64_read_reg_1776;
reg  signed [63:0] lambda_sqrt_integer_int64_read_reg_1776_pp0_iter1_reg;
reg  signed [63:0] lambda_sqrt_integer_int64_read_reg_1776_pp0_iter2_reg;
reg  signed [63:0] lambda_sqrt_integer_int64_read_reg_1776_pp0_iter3_reg;
wire   [0:0] same_cand_fu_493_p2;
reg   [0:0] same_cand_reg_1781;
reg   [0:0] same_cand_reg_1781_pp0_iter1_reg;
reg   [0:0] same_cand_reg_1781_pp0_iter2_reg;
wire   [31:0] sub_ln6690_fu_503_p2;
reg   [31:0] sub_ln6690_reg_1785;
wire   [31:0] sub_ln6691_fu_513_p2;
reg   [31:0] sub_ln6691_reg_1792;
wire   [31:0] sub_ln6699_fu_523_p2;
reg   [31:0] sub_ln6699_reg_1799;
wire   [31:0] sub_ln6700_fu_533_p2;
reg   [31:0] sub_ln6700_reg_1806;
wire   [0:0] icmp_ln6664_fu_573_p2;
reg   [0:0] icmp_ln6664_reg_1813;
wire   [0:0] icmp_ln6665_fu_579_p2;
reg   [0:0] icmp_ln6665_reg_1818;
wire   [0:0] icmp_ln6600_fu_595_p2;
reg   [0:0] icmp_ln6600_reg_1823;
wire   [0:0] icmp_ln6602_fu_611_p2;
reg   [0:0] icmp_ln6602_reg_1827;
wire   [0:0] icmp_ln6604_fu_627_p2;
reg   [0:0] icmp_ln6604_reg_1831;
wire   [0:0] icmp_ln6606_fu_643_p2;
reg   [0:0] icmp_ln6606_reg_1835;
wire   [0:0] icmp_ln6608_fu_659_p2;
reg   [0:0] icmp_ln6608_reg_1839;
wire   [0:0] icmp_ln6610_fu_675_p2;
reg   [0:0] icmp_ln6610_reg_1843;
wire   [0:0] icmp_ln6612_fu_691_p2;
reg   [0:0] icmp_ln6612_reg_1847;
wire   [0:0] icmp_ln6614_fu_707_p2;
reg   [0:0] icmp_ln6614_reg_1851;
wire   [0:0] icmp_ln6616_fu_723_p2;
reg   [0:0] icmp_ln6616_reg_1855;
wire   [0:0] icmp_ln6618_fu_739_p2;
reg   [0:0] icmp_ln6618_reg_1859;
wire   [0:0] icmp_ln6620_fu_755_p2;
reg   [0:0] icmp_ln6620_reg_1863;
wire   [0:0] icmp_ln6622_fu_771_p2;
reg   [0:0] icmp_ln6622_reg_1867;
wire   [0:0] icmp_ln6624_fu_787_p2;
reg   [0:0] icmp_ln6624_reg_1871;
wire   [0:0] icmp_ln6626_fu_803_p2;
reg   [0:0] icmp_ln6626_reg_1875;
wire   [0:0] icmp_ln6628_fu_819_p2;
reg   [0:0] icmp_ln6628_reg_1879;
wire   [0:0] icmp_ln6600_1_fu_835_p2;
reg   [0:0] icmp_ln6600_1_reg_1884;
wire   [0:0] icmp_ln6602_1_fu_851_p2;
reg   [0:0] icmp_ln6602_1_reg_1888;
wire   [0:0] icmp_ln6604_1_fu_867_p2;
reg   [0:0] icmp_ln6604_1_reg_1892;
wire   [0:0] icmp_ln6606_1_fu_883_p2;
reg   [0:0] icmp_ln6606_1_reg_1896;
wire   [0:0] icmp_ln6608_1_fu_899_p2;
reg   [0:0] icmp_ln6608_1_reg_1900;
wire   [0:0] icmp_ln6610_1_fu_915_p2;
reg   [0:0] icmp_ln6610_1_reg_1904;
wire   [0:0] icmp_ln6612_1_fu_931_p2;
reg   [0:0] icmp_ln6612_1_reg_1908;
wire   [0:0] icmp_ln6614_1_fu_947_p2;
reg   [0:0] icmp_ln6614_1_reg_1912;
wire   [0:0] icmp_ln6616_1_fu_963_p2;
reg   [0:0] icmp_ln6616_1_reg_1916;
wire   [0:0] icmp_ln6618_1_fu_979_p2;
reg   [0:0] icmp_ln6618_1_reg_1920;
wire   [0:0] icmp_ln6620_1_fu_995_p2;
reg   [0:0] icmp_ln6620_1_reg_1924;
wire   [0:0] icmp_ln6622_1_fu_1011_p2;
reg   [0:0] icmp_ln6622_1_reg_1928;
wire   [0:0] icmp_ln6624_1_fu_1027_p2;
reg   [0:0] icmp_ln6624_1_reg_1932;
wire   [0:0] icmp_ln6626_1_fu_1043_p2;
reg   [0:0] icmp_ln6626_1_reg_1936;
wire   [0:0] icmp_ln6628_1_fu_1059_p2;
reg   [0:0] icmp_ln6628_1_reg_1940;
wire   [0:0] icmp_ln6664_1_fu_1099_p2;
reg   [0:0] icmp_ln6664_1_reg_1945;
wire   [0:0] icmp_ln6665_1_fu_1105_p2;
reg   [0:0] icmp_ln6665_1_reg_1950;
wire   [0:0] icmp_ln6600_2_fu_1121_p2;
reg   [0:0] icmp_ln6600_2_reg_1955;
wire   [0:0] icmp_ln6602_2_fu_1137_p2;
reg   [0:0] icmp_ln6602_2_reg_1959;
wire   [0:0] icmp_ln6604_2_fu_1153_p2;
reg   [0:0] icmp_ln6604_2_reg_1963;
wire   [0:0] icmp_ln6606_2_fu_1169_p2;
reg   [0:0] icmp_ln6606_2_reg_1967;
wire   [0:0] icmp_ln6608_2_fu_1185_p2;
reg   [0:0] icmp_ln6608_2_reg_1971;
wire   [0:0] icmp_ln6610_2_fu_1201_p2;
reg   [0:0] icmp_ln6610_2_reg_1975;
wire   [0:0] icmp_ln6612_2_fu_1217_p2;
reg   [0:0] icmp_ln6612_2_reg_1979;
wire   [0:0] icmp_ln6614_2_fu_1233_p2;
reg   [0:0] icmp_ln6614_2_reg_1983;
wire   [0:0] icmp_ln6616_2_fu_1249_p2;
reg   [0:0] icmp_ln6616_2_reg_1987;
wire   [0:0] icmp_ln6618_2_fu_1265_p2;
reg   [0:0] icmp_ln6618_2_reg_1991;
wire   [0:0] icmp_ln6620_2_fu_1281_p2;
reg   [0:0] icmp_ln6620_2_reg_1995;
wire   [0:0] icmp_ln6622_2_fu_1297_p2;
reg   [0:0] icmp_ln6622_2_reg_1999;
wire   [0:0] icmp_ln6624_2_fu_1313_p2;
reg   [0:0] icmp_ln6624_2_reg_2003;
wire   [0:0] icmp_ln6626_2_fu_1329_p2;
reg   [0:0] icmp_ln6626_2_reg_2007;
wire   [0:0] icmp_ln6628_2_fu_1345_p2;
reg   [0:0] icmp_ln6628_2_reg_2011;
wire   [0:0] icmp_ln6600_3_fu_1361_p2;
reg   [0:0] icmp_ln6600_3_reg_2016;
wire   [0:0] icmp_ln6602_3_fu_1377_p2;
reg   [0:0] icmp_ln6602_3_reg_2020;
wire   [0:0] icmp_ln6604_3_fu_1393_p2;
reg   [0:0] icmp_ln6604_3_reg_2024;
wire   [0:0] icmp_ln6606_3_fu_1409_p2;
reg   [0:0] icmp_ln6606_3_reg_2028;
wire   [0:0] icmp_ln6608_3_fu_1425_p2;
reg   [0:0] icmp_ln6608_3_reg_2032;
wire   [0:0] icmp_ln6610_3_fu_1441_p2;
reg   [0:0] icmp_ln6610_3_reg_2036;
wire   [0:0] icmp_ln6612_3_fu_1457_p2;
reg   [0:0] icmp_ln6612_3_reg_2040;
wire   [0:0] icmp_ln6614_3_fu_1473_p2;
reg   [0:0] icmp_ln6614_3_reg_2044;
wire   [0:0] icmp_ln6616_3_fu_1489_p2;
reg   [0:0] icmp_ln6616_3_reg_2048;
wire   [0:0] icmp_ln6618_3_fu_1505_p2;
reg   [0:0] icmp_ln6618_3_reg_2052;
wire   [0:0] icmp_ln6620_3_fu_1521_p2;
reg   [0:0] icmp_ln6620_3_reg_2056;
wire   [0:0] icmp_ln6622_3_fu_1537_p2;
reg   [0:0] icmp_ln6622_3_reg_2060;
wire   [0:0] icmp_ln6624_3_fu_1553_p2;
reg   [0:0] icmp_ln6624_3_reg_2064;
wire   [0:0] icmp_ln6626_3_fu_1569_p2;
reg   [0:0] icmp_ln6626_3_reg_2068;
wire   [0:0] icmp_ln6628_3_fu_1585_p2;
reg   [0:0] icmp_ln6628_3_reg_2072;
wire   [17:0] add_ln6671_2_fu_1629_p2;
reg   [17:0] add_ln6671_2_reg_2077;
wire   [20:0] add_ln6671_3_fu_1635_p2;
reg   [20:0] add_ln6671_3_reg_2082;
wire   [17:0] add_ln6671_4_fu_1679_p2;
reg   [17:0] add_ln6671_4_reg_2087;
wire   [20:0] add_ln6671_5_fu_1685_p2;
reg   [20:0] add_ln6671_5_reg_2092;
wire   [40:0] select_ln6704_fu_1739_p3;
reg   [40:0] select_ln6704_reg_2097;
wire   [63:0] zext_ln6704_fu_1747_p1;
reg   [63:0] zext_ln6704_reg_2102;
reg   [63:0] zext_ln6704_reg_2102_pp0_iter5_reg;
reg   [63:0] zext_ln6704_reg_2102_pp0_iter6_reg;
reg   [63:0] zext_ln6704_reg_2102_pp0_iter7_reg;
reg   [63:0] zext_ln6704_reg_2102_pp0_iter8_reg;
wire   [63:0] grp_fu_461_p2;
reg   [63:0] mul_ln6756_reg_2109;
reg   [49:0] trunc_ln_reg_2114;
reg   [19:0] ap_phi_mux_retval_0_i_i_i_phi_fu_259_p30;
wire   [19:0] select_ln6628_fu_1605_p3;
wire   [19:0] ap_phi_reg_pp0_iter2_retval_0_i_i_i_reg_256;
reg   [19:0] ap_phi_mux_retval_0_i46_i_i_phi_fu_308_p30;
wire   [19:0] select_ln6628_1_fu_1613_p3;
wire   [19:0] ap_phi_reg_pp0_iter2_retval_0_i46_i_i_reg_305;
reg   [19:0] ap_phi_mux_retval_0_i_i62_i_phi_fu_357_p30;
wire   [19:0] select_ln6628_2_fu_1655_p3;
wire   [19:0] ap_phi_reg_pp0_iter2_retval_0_i_i62_i_reg_354;
reg   [19:0] ap_phi_mux_retval_0_i46_i110_i_phi_fu_406_p30;
wire   [19:0] select_ln6628_3_fu_1663_p3;
wire   [19:0] ap_phi_reg_pp0_iter2_retval_0_i46_i110_i_reg_403;
reg   [40:0] ap_phi_mux_cand2_cost_1_phi_fu_455_p4;
wire   [40:0] cand2_cost_fu_1724_p3;
wire   [40:0] ap_phi_reg_pp0_iter3_cand2_cost_1_reg_452;
wire   [40:0] cand1_cost_fu_1703_p3;
wire    ap_block_pp0_stage0_01001;
wire   [40:0] grp_fu_461_p0;
wire    ap_block_pp0_stage0;
wire   [40:0] grp_fu_465_p0;
wire  signed [15:0] icmp_ln6682_fu_481_p0;
wire  signed [15:0] icmp_ln6682_fu_481_p1;
wire  signed [15:0] icmp_ln6682_1_fu_487_p0;
wire  signed [15:0] icmp_ln6682_1_fu_487_p1;
wire   [0:0] icmp_ln6682_fu_481_p2;
wire   [0:0] icmp_ln6682_1_fu_487_p2;
wire  signed [15:0] sext_ln6690_fu_499_p0;
wire   [31:0] shl_ln6730_fu_469_p2;
wire  signed [31:0] sext_ln6690_fu_499_p1;
wire  signed [15:0] sext_ln6691_fu_509_p0;
wire   [31:0] shl_ln6731_fu_475_p2;
wire  signed [31:0] sext_ln6691_fu_509_p1;
wire  signed [15:0] sext_ln6699_fu_519_p0;
wire  signed [31:0] sext_ln6699_fu_519_p1;
wire  signed [15:0] sext_ln6700_fu_529_p0;
wire  signed [31:0] sext_ln6700_fu_529_p1;
wire   [0:0] abscond_fu_544_p2;
wire   [31:0] neg_fu_539_p2;
wire   [0:0] abscond4_fu_561_p2;
wire   [31:0] neg3_fu_556_p2;
wire   [31:0] abs_fu_549_p3;
wire   [31:0] abs5_fu_566_p3;
wire   [16:0] tmp_fu_585_p4;
wire   [17:0] tmp_1_fu_601_p4;
wire   [18:0] tmp_2_fu_617_p4;
wire   [19:0] tmp_3_fu_633_p4;
wire   [20:0] tmp_4_fu_649_p4;
wire   [21:0] tmp_5_fu_665_p4;
wire   [22:0] tmp_6_fu_681_p4;
wire   [23:0] tmp_7_fu_697_p4;
wire   [24:0] tmp_8_fu_713_p4;
wire   [25:0] tmp_9_fu_729_p4;
wire   [26:0] tmp_10_fu_745_p4;
wire   [27:0] tmp_11_fu_761_p4;
wire   [28:0] tmp_12_fu_777_p4;
wire   [29:0] tmp_13_fu_793_p4;
wire   [30:0] tmp_14_fu_809_p4;
wire   [16:0] tmp_15_fu_825_p4;
wire   [17:0] tmp_16_fu_841_p4;
wire   [18:0] tmp_17_fu_857_p4;
wire   [19:0] tmp_18_fu_873_p4;
wire   [20:0] tmp_19_fu_889_p4;
wire   [21:0] tmp_20_fu_905_p4;
wire   [22:0] tmp_21_fu_921_p4;
wire   [23:0] tmp_22_fu_937_p4;
wire   [24:0] tmp_23_fu_953_p4;
wire   [25:0] tmp_24_fu_969_p4;
wire   [26:0] tmp_25_fu_985_p4;
wire   [27:0] tmp_26_fu_1001_p4;
wire   [28:0] tmp_27_fu_1017_p4;
wire   [29:0] tmp_28_fu_1033_p4;
wire   [30:0] tmp_29_fu_1049_p4;
wire   [0:0] abscond7_fu_1070_p2;
wire   [31:0] neg6_fu_1065_p2;
wire   [0:0] abscond10_fu_1087_p2;
wire   [31:0] neg9_fu_1082_p2;
wire   [31:0] abs8_fu_1075_p3;
wire   [31:0] abs11_fu_1092_p3;
wire   [16:0] tmp_30_fu_1111_p4;
wire   [17:0] tmp_31_fu_1127_p4;
wire   [18:0] tmp_32_fu_1143_p4;
wire   [19:0] tmp_33_fu_1159_p4;
wire   [20:0] tmp_34_fu_1175_p4;
wire   [21:0] tmp_35_fu_1191_p4;
wire   [22:0] tmp_36_fu_1207_p4;
wire   [23:0] tmp_37_fu_1223_p4;
wire   [24:0] tmp_38_fu_1239_p4;
wire   [25:0] tmp_39_fu_1255_p4;
wire   [26:0] tmp_40_fu_1271_p4;
wire   [27:0] tmp_41_fu_1287_p4;
wire   [28:0] tmp_42_fu_1303_p4;
wire   [29:0] tmp_43_fu_1319_p4;
wire   [30:0] tmp_44_fu_1335_p4;
wire   [16:0] tmp_45_fu_1351_p4;
wire   [17:0] tmp_46_fu_1367_p4;
wire   [18:0] tmp_47_fu_1383_p4;
wire   [19:0] tmp_48_fu_1399_p4;
wire   [20:0] tmp_49_fu_1415_p4;
wire   [21:0] tmp_50_fu_1431_p4;
wire   [22:0] tmp_51_fu_1447_p4;
wire   [23:0] tmp_52_fu_1463_p4;
wire   [24:0] tmp_53_fu_1479_p4;
wire   [25:0] tmp_54_fu_1495_p4;
wire   [26:0] tmp_55_fu_1511_p4;
wire   [27:0] tmp_56_fu_1527_p4;
wire   [28:0] tmp_57_fu_1543_p4;
wire   [29:0] tmp_58_fu_1559_p4;
wire   [30:0] tmp_59_fu_1575_p4;
wire   [17:0] select_ln6600_fu_1598_p3;
wire   [17:0] select_ln6665_fu_1591_p3;
wire   [20:0] zext_ln6670_fu_1621_p1;
wire   [20:0] zext_ln6671_fu_1625_p1;
wire   [17:0] select_ln6600_1_fu_1648_p3;
wire   [17:0] select_ln6665_1_fu_1641_p3;
wire   [20:0] zext_ln6670_1_fu_1671_p1;
wire   [20:0] zext_ln6671_3_fu_1675_p1;
wire   [21:0] zext_ln6671_2_fu_1694_p1;
wire   [21:0] zext_ln6671_1_fu_1691_p1;
wire   [21:0] add_ln6671_fu_1697_p2;
wire   [21:0] zext_ln6671_5_fu_1715_p1;
wire   [21:0] zext_ln6671_4_fu_1712_p1;
wire   [21:0] add_ln6671_1_fu_1718_p2;
wire   [0:0] icmp_ln6704_fu_1733_p2;
wire   [63:0] grp_fu_465_p2;
wire  signed [63:0] sext_ln6756_fu_1762_p1;
reg    grp_fu_461_ce;
reg    grp_fu_465_ce;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to8;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_1586;
reg    ap_condition_1591;
reg    ap_condition_1596;
reg    ap_condition_1602;
reg    ap_condition_1609;
reg    ap_condition_1617;
reg    ap_condition_1626;
reg    ap_condition_1636;
reg    ap_condition_1647;
reg    ap_condition_1659;
reg    ap_condition_1672;
reg    ap_condition_1686;
reg    ap_condition_1701;
reg    ap_condition_1716;
reg    ap_condition_1721;
reg    ap_condition_1726;
reg    ap_condition_1732;
reg    ap_condition_1739;
reg    ap_condition_1747;
reg    ap_condition_1756;
reg    ap_condition_1766;
reg    ap_condition_1777;
reg    ap_condition_1789;
reg    ap_condition_1802;
reg    ap_condition_1816;
reg    ap_condition_1831;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
end

calc_mvd_cost_int64_hls_mul_41ns_64s_64_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 41 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
mul_41ns_64s_64_5_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_461_p0),
    .din1(lambda_sqrt_integer_int64_read_reg_1776_pp0_iter3_reg),
    .ce(grp_fu_461_ce),
    .dout(grp_fu_461_p2)
);

calc_mvd_cost_int64_hls_mul_41ns_64s_64_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 41 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
mul_41ns_64s_64_5_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_465_p0),
    .din1(lambda_sqrt_decimal_int64_read_reg_1771_pp0_iter3_reg),
    .ce(grp_fu_465_ce),
    .dout(grp_fu_465_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        if ((1'b1 == ap_ce)) begin
            ap_CS_fsm <= ap_NS_fsm;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce))) begin
        add_ln6671_2_reg_2077[17 : 15] <= add_ln6671_2_fu_1629_p2[17 : 15];
        add_ln6671_3_reg_2082 <= add_ln6671_3_fu_1635_p2;
        add_ln6671_4_reg_2087[17 : 15] <= add_ln6671_4_fu_1679_p2[17 : 15];
        add_ln6671_5_reg_2092 <= add_ln6671_5_fu_1685_p2;
        lambda_sqrt_decimal_int64_read_reg_1771_pp0_iter2_reg <= lambda_sqrt_decimal_int64_read_reg_1771_pp0_iter1_reg;
        lambda_sqrt_decimal_int64_read_reg_1771_pp0_iter3_reg <= lambda_sqrt_decimal_int64_read_reg_1771_pp0_iter2_reg;
        lambda_sqrt_integer_int64_read_reg_1776_pp0_iter2_reg <= lambda_sqrt_integer_int64_read_reg_1776_pp0_iter1_reg;
        lambda_sqrt_integer_int64_read_reg_1776_pp0_iter3_reg <= lambda_sqrt_integer_int64_read_reg_1776_pp0_iter2_reg;
        mul_ln6756_reg_2109 <= grp_fu_461_p2;
        same_cand_reg_1781_pp0_iter2_reg <= same_cand_reg_1781_pp0_iter1_reg;
        select_ln6704_reg_2097 <= select_ln6704_fu_1739_p3;
        trunc_ln_reg_2114 <= {{grp_fu_465_p2[63:14]}};
        zext_ln6704_reg_2102[40 : 0] <= zext_ln6704_fu_1747_p1[40 : 0];
        zext_ln6704_reg_2102_pp0_iter5_reg[40 : 0] <= zext_ln6704_reg_2102[40 : 0];
        zext_ln6704_reg_2102_pp0_iter6_reg[40 : 0] <= zext_ln6704_reg_2102_pp0_iter5_reg[40 : 0];
        zext_ln6704_reg_2102_pp0_iter7_reg[40 : 0] <= zext_ln6704_reg_2102_pp0_iter6_reg[40 : 0];
        zext_ln6704_reg_2102_pp0_iter8_reg[40 : 0] <= zext_ln6704_reg_2102_pp0_iter7_reg[40 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln6600_1_reg_1884 <= icmp_ln6600_1_fu_835_p2;
        icmp_ln6600_2_reg_1955 <= icmp_ln6600_2_fu_1121_p2;
        icmp_ln6600_3_reg_2016 <= icmp_ln6600_3_fu_1361_p2;
        icmp_ln6600_reg_1823 <= icmp_ln6600_fu_595_p2;
        icmp_ln6602_1_reg_1888 <= icmp_ln6602_1_fu_851_p2;
        icmp_ln6602_2_reg_1959 <= icmp_ln6602_2_fu_1137_p2;
        icmp_ln6602_3_reg_2020 <= icmp_ln6602_3_fu_1377_p2;
        icmp_ln6602_reg_1827 <= icmp_ln6602_fu_611_p2;
        icmp_ln6604_1_reg_1892 <= icmp_ln6604_1_fu_867_p2;
        icmp_ln6604_2_reg_1963 <= icmp_ln6604_2_fu_1153_p2;
        icmp_ln6604_3_reg_2024 <= icmp_ln6604_3_fu_1393_p2;
        icmp_ln6604_reg_1831 <= icmp_ln6604_fu_627_p2;
        icmp_ln6606_1_reg_1896 <= icmp_ln6606_1_fu_883_p2;
        icmp_ln6606_2_reg_1967 <= icmp_ln6606_2_fu_1169_p2;
        icmp_ln6606_3_reg_2028 <= icmp_ln6606_3_fu_1409_p2;
        icmp_ln6606_reg_1835 <= icmp_ln6606_fu_643_p2;
        icmp_ln6608_1_reg_1900 <= icmp_ln6608_1_fu_899_p2;
        icmp_ln6608_2_reg_1971 <= icmp_ln6608_2_fu_1185_p2;
        icmp_ln6608_3_reg_2032 <= icmp_ln6608_3_fu_1425_p2;
        icmp_ln6608_reg_1839 <= icmp_ln6608_fu_659_p2;
        icmp_ln6610_1_reg_1904 <= icmp_ln6610_1_fu_915_p2;
        icmp_ln6610_2_reg_1975 <= icmp_ln6610_2_fu_1201_p2;
        icmp_ln6610_3_reg_2036 <= icmp_ln6610_3_fu_1441_p2;
        icmp_ln6610_reg_1843 <= icmp_ln6610_fu_675_p2;
        icmp_ln6612_1_reg_1908 <= icmp_ln6612_1_fu_931_p2;
        icmp_ln6612_2_reg_1979 <= icmp_ln6612_2_fu_1217_p2;
        icmp_ln6612_3_reg_2040 <= icmp_ln6612_3_fu_1457_p2;
        icmp_ln6612_reg_1847 <= icmp_ln6612_fu_691_p2;
        icmp_ln6614_1_reg_1912 <= icmp_ln6614_1_fu_947_p2;
        icmp_ln6614_2_reg_1983 <= icmp_ln6614_2_fu_1233_p2;
        icmp_ln6614_3_reg_2044 <= icmp_ln6614_3_fu_1473_p2;
        icmp_ln6614_reg_1851 <= icmp_ln6614_fu_707_p2;
        icmp_ln6616_1_reg_1916 <= icmp_ln6616_1_fu_963_p2;
        icmp_ln6616_2_reg_1987 <= icmp_ln6616_2_fu_1249_p2;
        icmp_ln6616_3_reg_2048 <= icmp_ln6616_3_fu_1489_p2;
        icmp_ln6616_reg_1855 <= icmp_ln6616_fu_723_p2;
        icmp_ln6618_1_reg_1920 <= icmp_ln6618_1_fu_979_p2;
        icmp_ln6618_2_reg_1991 <= icmp_ln6618_2_fu_1265_p2;
        icmp_ln6618_3_reg_2052 <= icmp_ln6618_3_fu_1505_p2;
        icmp_ln6618_reg_1859 <= icmp_ln6618_fu_739_p2;
        icmp_ln6620_1_reg_1924 <= icmp_ln6620_1_fu_995_p2;
        icmp_ln6620_2_reg_1995 <= icmp_ln6620_2_fu_1281_p2;
        icmp_ln6620_3_reg_2056 <= icmp_ln6620_3_fu_1521_p2;
        icmp_ln6620_reg_1863 <= icmp_ln6620_fu_755_p2;
        icmp_ln6622_1_reg_1928 <= icmp_ln6622_1_fu_1011_p2;
        icmp_ln6622_2_reg_1999 <= icmp_ln6622_2_fu_1297_p2;
        icmp_ln6622_3_reg_2060 <= icmp_ln6622_3_fu_1537_p2;
        icmp_ln6622_reg_1867 <= icmp_ln6622_fu_771_p2;
        icmp_ln6624_1_reg_1932 <= icmp_ln6624_1_fu_1027_p2;
        icmp_ln6624_2_reg_2003 <= icmp_ln6624_2_fu_1313_p2;
        icmp_ln6624_3_reg_2064 <= icmp_ln6624_3_fu_1553_p2;
        icmp_ln6624_reg_1871 <= icmp_ln6624_fu_787_p2;
        icmp_ln6626_1_reg_1936 <= icmp_ln6626_1_fu_1043_p2;
        icmp_ln6626_2_reg_2007 <= icmp_ln6626_2_fu_1329_p2;
        icmp_ln6626_3_reg_2068 <= icmp_ln6626_3_fu_1569_p2;
        icmp_ln6626_reg_1875 <= icmp_ln6626_fu_803_p2;
        icmp_ln6628_1_reg_1940 <= icmp_ln6628_1_fu_1059_p2;
        icmp_ln6628_2_reg_2011 <= icmp_ln6628_2_fu_1345_p2;
        icmp_ln6628_3_reg_2072 <= icmp_ln6628_3_fu_1585_p2;
        icmp_ln6628_reg_1879 <= icmp_ln6628_fu_819_p2;
        icmp_ln6664_1_reg_1945 <= icmp_ln6664_1_fu_1099_p2;
        icmp_ln6664_reg_1813 <= icmp_ln6664_fu_573_p2;
        icmp_ln6665_1_reg_1950 <= icmp_ln6665_1_fu_1105_p2;
        icmp_ln6665_reg_1818 <= icmp_ln6665_fu_579_p2;
        lambda_sqrt_decimal_int64_read_reg_1771 <= lambda_sqrt_decimal_int64;
        lambda_sqrt_decimal_int64_read_reg_1771_pp0_iter1_reg <= lambda_sqrt_decimal_int64_read_reg_1771;
        lambda_sqrt_integer_int64_read_reg_1776 <= lambda_sqrt_integer_int64;
        lambda_sqrt_integer_int64_read_reg_1776_pp0_iter1_reg <= lambda_sqrt_integer_int64_read_reg_1776;
        same_cand_reg_1781 <= same_cand_fu_493_p2;
        same_cand_reg_1781_pp0_iter1_reg <= same_cand_reg_1781;
        sub_ln6690_reg_1785 <= sub_ln6690_fu_503_p2;
        sub_ln6691_reg_1792 <= sub_ln6691_fu_513_p2;
        sub_ln6699_reg_1799 <= sub_ln6699_fu_523_p2;
        sub_ln6700_reg_1806 <= sub_ln6700_fu_533_p2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to8 = 1'b1;
    end else begin
        ap_idle_pp0_0to8 = 1'b0;
    end
end

always @ (*) begin
    if ((same_cand_reg_1781_pp0_iter2_reg == 1'd1)) begin
        ap_phi_mux_cand2_cost_1_phi_fu_455_p4 = cand1_cost_fu_1703_p3;
    end else if ((same_cand_reg_1781_pp0_iter2_reg == 1'd0)) begin
        ap_phi_mux_cand2_cost_1_phi_fu_455_p4 = cand2_cost_fu_1724_p3;
    end else begin
        ap_phi_mux_cand2_cost_1_phi_fu_455_p4 = ap_phi_reg_pp0_iter3_cand2_cost_1_reg_452;
    end
end

always @ (*) begin
    if ((same_cand_reg_1781_pp0_iter1_reg == 1'd0)) begin
        if ((1'b1 == ap_condition_1701)) begin
            ap_phi_mux_retval_0_i46_i110_i_phi_fu_406_p30 = 20'd131072;
        end else if ((1'b1 == ap_condition_1686)) begin
            ap_phi_mux_retval_0_i46_i110_i_phi_fu_406_p30 = 20'd196608;
        end else if ((1'b1 == ap_condition_1672)) begin
            ap_phi_mux_retval_0_i46_i110_i_phi_fu_406_p30 = 20'd262144;
        end else if ((1'b1 == ap_condition_1659)) begin
            ap_phi_mux_retval_0_i46_i110_i_phi_fu_406_p30 = 20'd327680;
        end else if ((1'b1 == ap_condition_1647)) begin
            ap_phi_mux_retval_0_i46_i110_i_phi_fu_406_p30 = 20'd393216;
        end else if ((1'b1 == ap_condition_1636)) begin
            ap_phi_mux_retval_0_i46_i110_i_phi_fu_406_p30 = 20'd458752;
        end else if ((1'b1 == ap_condition_1626)) begin
            ap_phi_mux_retval_0_i46_i110_i_phi_fu_406_p30 = 20'd524288;
        end else if ((1'b1 == ap_condition_1617)) begin
            ap_phi_mux_retval_0_i46_i110_i_phi_fu_406_p30 = 20'd589824;
        end else if ((1'b1 == ap_condition_1609)) begin
            ap_phi_mux_retval_0_i46_i110_i_phi_fu_406_p30 = 20'd655360;
        end else if ((1'b1 == ap_condition_1602)) begin
            ap_phi_mux_retval_0_i46_i110_i_phi_fu_406_p30 = 20'd720896;
        end else if ((1'b1 == ap_condition_1596)) begin
            ap_phi_mux_retval_0_i46_i110_i_phi_fu_406_p30 = 20'd786432;
        end else if ((1'b1 == ap_condition_1591)) begin
            ap_phi_mux_retval_0_i46_i110_i_phi_fu_406_p30 = 20'd851968;
        end else if (((icmp_ln6602_3_reg_2020 == 1'd1) & (icmp_ln6600_3_reg_2016 == 1'd0))) begin
            ap_phi_mux_retval_0_i46_i110_i_phi_fu_406_p30 = 20'd917504;
        end else if ((icmp_ln6600_3_reg_2016 == 1'd1)) begin
            ap_phi_mux_retval_0_i46_i110_i_phi_fu_406_p30 = 20'd983040;
        end else if ((1'b1 == ap_condition_1586)) begin
            ap_phi_mux_retval_0_i46_i110_i_phi_fu_406_p30 = select_ln6628_3_fu_1663_p3;
        end else begin
            ap_phi_mux_retval_0_i46_i110_i_phi_fu_406_p30 = ap_phi_reg_pp0_iter2_retval_0_i46_i110_i_reg_403;
        end
    end else begin
        ap_phi_mux_retval_0_i46_i110_i_phi_fu_406_p30 = ap_phi_reg_pp0_iter2_retval_0_i46_i110_i_reg_403;
    end
end

always @ (*) begin
    if (((icmp_ln6626_1_reg_1936 == 1'd1) & (icmp_ln6624_1_reg_1932 == 1'd0) & (icmp_ln6622_1_reg_1928 == 1'd0) & (icmp_ln6620_1_reg_1924 == 1'd0) & (icmp_ln6618_1_reg_1920 == 1'd0) & (icmp_ln6616_1_reg_1916 == 1'd0) & (icmp_ln6614_1_reg_1912 == 1'd0) & (icmp_ln6612_1_reg_1908 == 1'd0) & (icmp_ln6610_1_reg_1904 == 1'd0) & (icmp_ln6608_1_reg_1900 == 1'd0) & (icmp_ln6606_1_reg_1896 == 1'd0) & (icmp_ln6604_1_reg_1892 == 1'd0) & (icmp_ln6602_1_reg_1888 == 1'd0) & (icmp_ln6600_1_reg_1884 == 1'd0))) begin
        ap_phi_mux_retval_0_i46_i_i_phi_fu_308_p30 = 20'd131072;
    end else if (((icmp_ln6624_1_reg_1932 == 1'd1) & (icmp_ln6622_1_reg_1928 == 1'd0) & (icmp_ln6620_1_reg_1924 == 1'd0) & (icmp_ln6618_1_reg_1920 == 1'd0) & (icmp_ln6616_1_reg_1916 == 1'd0) & (icmp_ln6614_1_reg_1912 == 1'd0) & (icmp_ln6612_1_reg_1908 == 1'd0) & (icmp_ln6610_1_reg_1904 == 1'd0) & (icmp_ln6608_1_reg_1900 == 1'd0) & (icmp_ln6606_1_reg_1896 == 1'd0) & (icmp_ln6604_1_reg_1892 == 1'd0) & (icmp_ln6602_1_reg_1888 == 1'd0) & (icmp_ln6600_1_reg_1884 == 1'd0))) begin
        ap_phi_mux_retval_0_i46_i_i_phi_fu_308_p30 = 20'd196608;
    end else if (((icmp_ln6622_1_reg_1928 == 1'd1) & (icmp_ln6620_1_reg_1924 == 1'd0) & (icmp_ln6618_1_reg_1920 == 1'd0) & (icmp_ln6616_1_reg_1916 == 1'd0) & (icmp_ln6614_1_reg_1912 == 1'd0) & (icmp_ln6612_1_reg_1908 == 1'd0) & (icmp_ln6610_1_reg_1904 == 1'd0) & (icmp_ln6608_1_reg_1900 == 1'd0) & (icmp_ln6606_1_reg_1896 == 1'd0) & (icmp_ln6604_1_reg_1892 == 1'd0) & (icmp_ln6602_1_reg_1888 == 1'd0) & (icmp_ln6600_1_reg_1884 == 1'd0))) begin
        ap_phi_mux_retval_0_i46_i_i_phi_fu_308_p30 = 20'd262144;
    end else if (((icmp_ln6620_1_reg_1924 == 1'd1) & (icmp_ln6618_1_reg_1920 == 1'd0) & (icmp_ln6616_1_reg_1916 == 1'd0) & (icmp_ln6614_1_reg_1912 == 1'd0) & (icmp_ln6612_1_reg_1908 == 1'd0) & (icmp_ln6610_1_reg_1904 == 1'd0) & (icmp_ln6608_1_reg_1900 == 1'd0) & (icmp_ln6606_1_reg_1896 == 1'd0) & (icmp_ln6604_1_reg_1892 == 1'd0) & (icmp_ln6602_1_reg_1888 == 1'd0) & (icmp_ln6600_1_reg_1884 == 1'd0))) begin
        ap_phi_mux_retval_0_i46_i_i_phi_fu_308_p30 = 20'd327680;
    end else if (((icmp_ln6618_1_reg_1920 == 1'd1) & (icmp_ln6616_1_reg_1916 == 1'd0) & (icmp_ln6614_1_reg_1912 == 1'd0) & (icmp_ln6612_1_reg_1908 == 1'd0) & (icmp_ln6610_1_reg_1904 == 1'd0) & (icmp_ln6608_1_reg_1900 == 1'd0) & (icmp_ln6606_1_reg_1896 == 1'd0) & (icmp_ln6604_1_reg_1892 == 1'd0) & (icmp_ln6602_1_reg_1888 == 1'd0) & (icmp_ln6600_1_reg_1884 == 1'd0))) begin
        ap_phi_mux_retval_0_i46_i_i_phi_fu_308_p30 = 20'd393216;
    end else if (((icmp_ln6616_1_reg_1916 == 1'd1) & (icmp_ln6614_1_reg_1912 == 1'd0) & (icmp_ln6612_1_reg_1908 == 1'd0) & (icmp_ln6610_1_reg_1904 == 1'd0) & (icmp_ln6608_1_reg_1900 == 1'd0) & (icmp_ln6606_1_reg_1896 == 1'd0) & (icmp_ln6604_1_reg_1892 == 1'd0) & (icmp_ln6602_1_reg_1888 == 1'd0) & (icmp_ln6600_1_reg_1884 == 1'd0))) begin
        ap_phi_mux_retval_0_i46_i_i_phi_fu_308_p30 = 20'd458752;
    end else if (((icmp_ln6614_1_reg_1912 == 1'd1) & (icmp_ln6612_1_reg_1908 == 1'd0) & (icmp_ln6610_1_reg_1904 == 1'd0) & (icmp_ln6608_1_reg_1900 == 1'd0) & (icmp_ln6606_1_reg_1896 == 1'd0) & (icmp_ln6604_1_reg_1892 == 1'd0) & (icmp_ln6602_1_reg_1888 == 1'd0) & (icmp_ln6600_1_reg_1884 == 1'd0))) begin
        ap_phi_mux_retval_0_i46_i_i_phi_fu_308_p30 = 20'd524288;
    end else if (((icmp_ln6612_1_reg_1908 == 1'd1) & (icmp_ln6610_1_reg_1904 == 1'd0) & (icmp_ln6608_1_reg_1900 == 1'd0) & (icmp_ln6606_1_reg_1896 == 1'd0) & (icmp_ln6604_1_reg_1892 == 1'd0) & (icmp_ln6602_1_reg_1888 == 1'd0) & (icmp_ln6600_1_reg_1884 == 1'd0))) begin
        ap_phi_mux_retval_0_i46_i_i_phi_fu_308_p30 = 20'd589824;
    end else if (((icmp_ln6610_1_reg_1904 == 1'd1) & (icmp_ln6608_1_reg_1900 == 1'd0) & (icmp_ln6606_1_reg_1896 == 1'd0) & (icmp_ln6604_1_reg_1892 == 1'd0) & (icmp_ln6602_1_reg_1888 == 1'd0) & (icmp_ln6600_1_reg_1884 == 1'd0))) begin
        ap_phi_mux_retval_0_i46_i_i_phi_fu_308_p30 = 20'd655360;
    end else if (((icmp_ln6608_1_reg_1900 == 1'd1) & (icmp_ln6606_1_reg_1896 == 1'd0) & (icmp_ln6604_1_reg_1892 == 1'd0) & (icmp_ln6602_1_reg_1888 == 1'd0) & (icmp_ln6600_1_reg_1884 == 1'd0))) begin
        ap_phi_mux_retval_0_i46_i_i_phi_fu_308_p30 = 20'd720896;
    end else if (((icmp_ln6606_1_reg_1896 == 1'd1) & (icmp_ln6604_1_reg_1892 == 1'd0) & (icmp_ln6602_1_reg_1888 == 1'd0) & (icmp_ln6600_1_reg_1884 == 1'd0))) begin
        ap_phi_mux_retval_0_i46_i_i_phi_fu_308_p30 = 20'd786432;
    end else if (((icmp_ln6604_1_reg_1892 == 1'd1) & (icmp_ln6602_1_reg_1888 == 1'd0) & (icmp_ln6600_1_reg_1884 == 1'd0))) begin
        ap_phi_mux_retval_0_i46_i_i_phi_fu_308_p30 = 20'd851968;
    end else if (((icmp_ln6602_1_reg_1888 == 1'd1) & (icmp_ln6600_1_reg_1884 == 1'd0))) begin
        ap_phi_mux_retval_0_i46_i_i_phi_fu_308_p30 = 20'd917504;
    end else if ((icmp_ln6600_1_reg_1884 == 1'd1)) begin
        ap_phi_mux_retval_0_i46_i_i_phi_fu_308_p30 = 20'd983040;
    end else if (((icmp_ln6626_1_reg_1936 == 1'd0) & (icmp_ln6624_1_reg_1932 == 1'd0) & (icmp_ln6622_1_reg_1928 == 1'd0) & (icmp_ln6620_1_reg_1924 == 1'd0) & (icmp_ln6618_1_reg_1920 == 1'd0) & (icmp_ln6616_1_reg_1916 == 1'd0) & (icmp_ln6614_1_reg_1912 == 1'd0) & (icmp_ln6612_1_reg_1908 == 1'd0) & (icmp_ln6610_1_reg_1904 == 1'd0) & (icmp_ln6608_1_reg_1900 == 1'd0) & (icmp_ln6606_1_reg_1896 == 1'd0) & (icmp_ln6604_1_reg_1892 == 1'd0) & (icmp_ln6602_1_reg_1888 == 1'd0) & (icmp_ln6600_1_reg_1884 == 1'd0))) begin
        ap_phi_mux_retval_0_i46_i_i_phi_fu_308_p30 = select_ln6628_1_fu_1613_p3;
    end else begin
        ap_phi_mux_retval_0_i46_i_i_phi_fu_308_p30 = ap_phi_reg_pp0_iter2_retval_0_i46_i_i_reg_305;
    end
end

always @ (*) begin
    if ((same_cand_reg_1781_pp0_iter1_reg == 1'd0)) begin
        if ((1'b1 == ap_condition_1831)) begin
            ap_phi_mux_retval_0_i_i62_i_phi_fu_357_p30 = 20'd131072;
        end else if ((1'b1 == ap_condition_1816)) begin
            ap_phi_mux_retval_0_i_i62_i_phi_fu_357_p30 = 20'd196608;
        end else if ((1'b1 == ap_condition_1802)) begin
            ap_phi_mux_retval_0_i_i62_i_phi_fu_357_p30 = 20'd262144;
        end else if ((1'b1 == ap_condition_1789)) begin
            ap_phi_mux_retval_0_i_i62_i_phi_fu_357_p30 = 20'd327680;
        end else if ((1'b1 == ap_condition_1777)) begin
            ap_phi_mux_retval_0_i_i62_i_phi_fu_357_p30 = 20'd393216;
        end else if ((1'b1 == ap_condition_1766)) begin
            ap_phi_mux_retval_0_i_i62_i_phi_fu_357_p30 = 20'd458752;
        end else if ((1'b1 == ap_condition_1756)) begin
            ap_phi_mux_retval_0_i_i62_i_phi_fu_357_p30 = 20'd524288;
        end else if ((1'b1 == ap_condition_1747)) begin
            ap_phi_mux_retval_0_i_i62_i_phi_fu_357_p30 = 20'd589824;
        end else if ((1'b1 == ap_condition_1739)) begin
            ap_phi_mux_retval_0_i_i62_i_phi_fu_357_p30 = 20'd655360;
        end else if ((1'b1 == ap_condition_1732)) begin
            ap_phi_mux_retval_0_i_i62_i_phi_fu_357_p30 = 20'd720896;
        end else if ((1'b1 == ap_condition_1726)) begin
            ap_phi_mux_retval_0_i_i62_i_phi_fu_357_p30 = 20'd786432;
        end else if ((1'b1 == ap_condition_1721)) begin
            ap_phi_mux_retval_0_i_i62_i_phi_fu_357_p30 = 20'd851968;
        end else if (((icmp_ln6602_2_reg_1959 == 1'd1) & (icmp_ln6600_2_reg_1955 == 1'd0))) begin
            ap_phi_mux_retval_0_i_i62_i_phi_fu_357_p30 = 20'd917504;
        end else if ((icmp_ln6600_2_reg_1955 == 1'd1)) begin
            ap_phi_mux_retval_0_i_i62_i_phi_fu_357_p30 = 20'd983040;
        end else if ((1'b1 == ap_condition_1716)) begin
            ap_phi_mux_retval_0_i_i62_i_phi_fu_357_p30 = select_ln6628_2_fu_1655_p3;
        end else begin
            ap_phi_mux_retval_0_i_i62_i_phi_fu_357_p30 = ap_phi_reg_pp0_iter2_retval_0_i_i62_i_reg_354;
        end
    end else begin
        ap_phi_mux_retval_0_i_i62_i_phi_fu_357_p30 = ap_phi_reg_pp0_iter2_retval_0_i_i62_i_reg_354;
    end
end

always @ (*) begin
    if (((icmp_ln6626_reg_1875 == 1'd1) & (icmp_ln6624_reg_1871 == 1'd0) & (icmp_ln6622_reg_1867 == 1'd0) & (icmp_ln6620_reg_1863 == 1'd0) & (icmp_ln6618_reg_1859 == 1'd0) & (icmp_ln6616_reg_1855 == 1'd0) & (icmp_ln6614_reg_1851 == 1'd0) & (icmp_ln6612_reg_1847 == 1'd0) & (icmp_ln6610_reg_1843 == 1'd0) & (icmp_ln6608_reg_1839 == 1'd0) & (icmp_ln6606_reg_1835 == 1'd0) & (icmp_ln6604_reg_1831 == 1'd0) & (icmp_ln6602_reg_1827 == 1'd0) & (icmp_ln6600_reg_1823 == 1'd0))) begin
        ap_phi_mux_retval_0_i_i_i_phi_fu_259_p30 = 20'd131072;
    end else if (((icmp_ln6624_reg_1871 == 1'd1) & (icmp_ln6622_reg_1867 == 1'd0) & (icmp_ln6620_reg_1863 == 1'd0) & (icmp_ln6618_reg_1859 == 1'd0) & (icmp_ln6616_reg_1855 == 1'd0) & (icmp_ln6614_reg_1851 == 1'd0) & (icmp_ln6612_reg_1847 == 1'd0) & (icmp_ln6610_reg_1843 == 1'd0) & (icmp_ln6608_reg_1839 == 1'd0) & (icmp_ln6606_reg_1835 == 1'd0) & (icmp_ln6604_reg_1831 == 1'd0) & (icmp_ln6602_reg_1827 == 1'd0) & (icmp_ln6600_reg_1823 == 1'd0))) begin
        ap_phi_mux_retval_0_i_i_i_phi_fu_259_p30 = 20'd196608;
    end else if (((icmp_ln6622_reg_1867 == 1'd1) & (icmp_ln6620_reg_1863 == 1'd0) & (icmp_ln6618_reg_1859 == 1'd0) & (icmp_ln6616_reg_1855 == 1'd0) & (icmp_ln6614_reg_1851 == 1'd0) & (icmp_ln6612_reg_1847 == 1'd0) & (icmp_ln6610_reg_1843 == 1'd0) & (icmp_ln6608_reg_1839 == 1'd0) & (icmp_ln6606_reg_1835 == 1'd0) & (icmp_ln6604_reg_1831 == 1'd0) & (icmp_ln6602_reg_1827 == 1'd0) & (icmp_ln6600_reg_1823 == 1'd0))) begin
        ap_phi_mux_retval_0_i_i_i_phi_fu_259_p30 = 20'd262144;
    end else if (((icmp_ln6620_reg_1863 == 1'd1) & (icmp_ln6618_reg_1859 == 1'd0) & (icmp_ln6616_reg_1855 == 1'd0) & (icmp_ln6614_reg_1851 == 1'd0) & (icmp_ln6612_reg_1847 == 1'd0) & (icmp_ln6610_reg_1843 == 1'd0) & (icmp_ln6608_reg_1839 == 1'd0) & (icmp_ln6606_reg_1835 == 1'd0) & (icmp_ln6604_reg_1831 == 1'd0) & (icmp_ln6602_reg_1827 == 1'd0) & (icmp_ln6600_reg_1823 == 1'd0))) begin
        ap_phi_mux_retval_0_i_i_i_phi_fu_259_p30 = 20'd327680;
    end else if (((icmp_ln6618_reg_1859 == 1'd1) & (icmp_ln6616_reg_1855 == 1'd0) & (icmp_ln6614_reg_1851 == 1'd0) & (icmp_ln6612_reg_1847 == 1'd0) & (icmp_ln6610_reg_1843 == 1'd0) & (icmp_ln6608_reg_1839 == 1'd0) & (icmp_ln6606_reg_1835 == 1'd0) & (icmp_ln6604_reg_1831 == 1'd0) & (icmp_ln6602_reg_1827 == 1'd0) & (icmp_ln6600_reg_1823 == 1'd0))) begin
        ap_phi_mux_retval_0_i_i_i_phi_fu_259_p30 = 20'd393216;
    end else if (((icmp_ln6616_reg_1855 == 1'd1) & (icmp_ln6614_reg_1851 == 1'd0) & (icmp_ln6612_reg_1847 == 1'd0) & (icmp_ln6610_reg_1843 == 1'd0) & (icmp_ln6608_reg_1839 == 1'd0) & (icmp_ln6606_reg_1835 == 1'd0) & (icmp_ln6604_reg_1831 == 1'd0) & (icmp_ln6602_reg_1827 == 1'd0) & (icmp_ln6600_reg_1823 == 1'd0))) begin
        ap_phi_mux_retval_0_i_i_i_phi_fu_259_p30 = 20'd458752;
    end else if (((icmp_ln6614_reg_1851 == 1'd1) & (icmp_ln6612_reg_1847 == 1'd0) & (icmp_ln6610_reg_1843 == 1'd0) & (icmp_ln6608_reg_1839 == 1'd0) & (icmp_ln6606_reg_1835 == 1'd0) & (icmp_ln6604_reg_1831 == 1'd0) & (icmp_ln6602_reg_1827 == 1'd0) & (icmp_ln6600_reg_1823 == 1'd0))) begin
        ap_phi_mux_retval_0_i_i_i_phi_fu_259_p30 = 20'd524288;
    end else if (((icmp_ln6612_reg_1847 == 1'd1) & (icmp_ln6610_reg_1843 == 1'd0) & (icmp_ln6608_reg_1839 == 1'd0) & (icmp_ln6606_reg_1835 == 1'd0) & (icmp_ln6604_reg_1831 == 1'd0) & (icmp_ln6602_reg_1827 == 1'd0) & (icmp_ln6600_reg_1823 == 1'd0))) begin
        ap_phi_mux_retval_0_i_i_i_phi_fu_259_p30 = 20'd589824;
    end else if (((icmp_ln6610_reg_1843 == 1'd1) & (icmp_ln6608_reg_1839 == 1'd0) & (icmp_ln6606_reg_1835 == 1'd0) & (icmp_ln6604_reg_1831 == 1'd0) & (icmp_ln6602_reg_1827 == 1'd0) & (icmp_ln6600_reg_1823 == 1'd0))) begin
        ap_phi_mux_retval_0_i_i_i_phi_fu_259_p30 = 20'd655360;
    end else if (((icmp_ln6608_reg_1839 == 1'd1) & (icmp_ln6606_reg_1835 == 1'd0) & (icmp_ln6604_reg_1831 == 1'd0) & (icmp_ln6602_reg_1827 == 1'd0) & (icmp_ln6600_reg_1823 == 1'd0))) begin
        ap_phi_mux_retval_0_i_i_i_phi_fu_259_p30 = 20'd720896;
    end else if (((icmp_ln6606_reg_1835 == 1'd1) & (icmp_ln6604_reg_1831 == 1'd0) & (icmp_ln6602_reg_1827 == 1'd0) & (icmp_ln6600_reg_1823 == 1'd0))) begin
        ap_phi_mux_retval_0_i_i_i_phi_fu_259_p30 = 20'd786432;
    end else if (((icmp_ln6604_reg_1831 == 1'd1) & (icmp_ln6602_reg_1827 == 1'd0) & (icmp_ln6600_reg_1823 == 1'd0))) begin
        ap_phi_mux_retval_0_i_i_i_phi_fu_259_p30 = 20'd851968;
    end else if (((icmp_ln6602_reg_1827 == 1'd1) & (icmp_ln6600_reg_1823 == 1'd0))) begin
        ap_phi_mux_retval_0_i_i_i_phi_fu_259_p30 = 20'd917504;
    end else if ((icmp_ln6600_reg_1823 == 1'd1)) begin
        ap_phi_mux_retval_0_i_i_i_phi_fu_259_p30 = 20'd983040;
    end else if (((icmp_ln6626_reg_1875 == 1'd0) & (icmp_ln6624_reg_1871 == 1'd0) & (icmp_ln6622_reg_1867 == 1'd0) & (icmp_ln6620_reg_1863 == 1'd0) & (icmp_ln6618_reg_1859 == 1'd0) & (icmp_ln6616_reg_1855 == 1'd0) & (icmp_ln6614_reg_1851 == 1'd0) & (icmp_ln6612_reg_1847 == 1'd0) & (icmp_ln6610_reg_1843 == 1'd0) & (icmp_ln6608_reg_1839 == 1'd0) & (icmp_ln6606_reg_1835 == 1'd0) & (icmp_ln6604_reg_1831 == 1'd0) & (icmp_ln6602_reg_1827 == 1'd0) & (icmp_ln6600_reg_1823 == 1'd0))) begin
        ap_phi_mux_retval_0_i_i_i_phi_fu_259_p30 = select_ln6628_fu_1605_p3;
    end else begin
        ap_phi_mux_retval_0_i_i_i_phi_fu_259_p30 = ap_phi_reg_pp0_iter2_retval_0_i_i_i_reg_256;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to8 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_ce))) begin
        bitcost_ap_vld = 1'b1;
    end else begin
        bitcost_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_461_ce = 1'b1;
    end else begin
        grp_fu_461_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_465_ce = 1'b1;
    end else begin
        grp_fu_465_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_ce))) begin
        mvd_cost_int64_ap_vld = 1'b1;
    end else begin
        mvd_cost_int64_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign abs11_fu_1092_p3 = ((abscond10_fu_1087_p2[0:0] == 1'b1) ? sub_ln6700_reg_1806 : neg9_fu_1082_p2);

assign abs5_fu_566_p3 = ((abscond4_fu_561_p2[0:0] == 1'b1) ? sub_ln6691_reg_1792 : neg3_fu_556_p2);

assign abs8_fu_1075_p3 = ((abscond7_fu_1070_p2[0:0] == 1'b1) ? sub_ln6699_reg_1799 : neg6_fu_1065_p2);

assign abs_fu_549_p3 = ((abscond_fu_544_p2[0:0] == 1'b1) ? sub_ln6690_reg_1785 : neg_fu_539_p2);

assign abscond10_fu_1087_p2 = (($signed(sub_ln6700_reg_1806) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign abscond4_fu_561_p2 = (($signed(sub_ln6691_reg_1792) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign abscond7_fu_1070_p2 = (($signed(sub_ln6699_reg_1799) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign abscond_fu_544_p2 = (($signed(sub_ln6690_reg_1785) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign add_ln6671_1_fu_1718_p2 = (zext_ln6671_5_fu_1715_p1 + zext_ln6671_4_fu_1712_p1);

assign add_ln6671_2_fu_1629_p2 = (select_ln6600_fu_1598_p3 + select_ln6665_fu_1591_p3);

assign add_ln6671_3_fu_1635_p2 = (zext_ln6670_fu_1621_p1 + zext_ln6671_fu_1625_p1);

assign add_ln6671_4_fu_1679_p2 = (select_ln6600_1_fu_1648_p3 + select_ln6665_1_fu_1641_p3);

assign add_ln6671_5_fu_1685_p2 = (zext_ln6670_1_fu_1671_p1 + zext_ln6671_3_fu_1675_p1);

assign add_ln6671_fu_1697_p2 = (zext_ln6671_2_fu_1694_p1 + zext_ln6671_1_fu_1691_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_subdone = (1'b0 == ap_ce);
end

always @ (*) begin
    ap_condition_1586 = ((icmp_ln6626_3_reg_2068 == 1'd0) & (icmp_ln6624_3_reg_2064 == 1'd0) & (icmp_ln6622_3_reg_2060 == 1'd0) & (icmp_ln6620_3_reg_2056 == 1'd0) & (icmp_ln6618_3_reg_2052 == 1'd0) & (icmp_ln6616_3_reg_2048 == 1'd0) & (icmp_ln6614_3_reg_2044 == 1'd0) & (icmp_ln6612_3_reg_2040 == 1'd0) & (icmp_ln6610_3_reg_2036 == 1'd0) & (icmp_ln6608_3_reg_2032 == 1'd0) & (icmp_ln6606_3_reg_2028 == 1'd0) & (icmp_ln6604_3_reg_2024 == 1'd0) & (icmp_ln6602_3_reg_2020 == 1'd0) & (icmp_ln6600_3_reg_2016 == 1'd0));
end

always @ (*) begin
    ap_condition_1591 = ((icmp_ln6604_3_reg_2024 == 1'd1) & (icmp_ln6602_3_reg_2020 == 1'd0) & (icmp_ln6600_3_reg_2016 == 1'd0));
end

always @ (*) begin
    ap_condition_1596 = ((icmp_ln6606_3_reg_2028 == 1'd1) & (icmp_ln6604_3_reg_2024 == 1'd0) & (icmp_ln6602_3_reg_2020 == 1'd0) & (icmp_ln6600_3_reg_2016 == 1'd0));
end

always @ (*) begin
    ap_condition_1602 = ((icmp_ln6608_3_reg_2032 == 1'd1) & (icmp_ln6606_3_reg_2028 == 1'd0) & (icmp_ln6604_3_reg_2024 == 1'd0) & (icmp_ln6602_3_reg_2020 == 1'd0) & (icmp_ln6600_3_reg_2016 == 1'd0));
end

always @ (*) begin
    ap_condition_1609 = ((icmp_ln6610_3_reg_2036 == 1'd1) & (icmp_ln6608_3_reg_2032 == 1'd0) & (icmp_ln6606_3_reg_2028 == 1'd0) & (icmp_ln6604_3_reg_2024 == 1'd0) & (icmp_ln6602_3_reg_2020 == 1'd0) & (icmp_ln6600_3_reg_2016 == 1'd0));
end

always @ (*) begin
    ap_condition_1617 = ((icmp_ln6612_3_reg_2040 == 1'd1) & (icmp_ln6610_3_reg_2036 == 1'd0) & (icmp_ln6608_3_reg_2032 == 1'd0) & (icmp_ln6606_3_reg_2028 == 1'd0) & (icmp_ln6604_3_reg_2024 == 1'd0) & (icmp_ln6602_3_reg_2020 == 1'd0) & (icmp_ln6600_3_reg_2016 == 1'd0));
end

always @ (*) begin
    ap_condition_1626 = ((icmp_ln6614_3_reg_2044 == 1'd1) & (icmp_ln6612_3_reg_2040 == 1'd0) & (icmp_ln6610_3_reg_2036 == 1'd0) & (icmp_ln6608_3_reg_2032 == 1'd0) & (icmp_ln6606_3_reg_2028 == 1'd0) & (icmp_ln6604_3_reg_2024 == 1'd0) & (icmp_ln6602_3_reg_2020 == 1'd0) & (icmp_ln6600_3_reg_2016 == 1'd0));
end

always @ (*) begin
    ap_condition_1636 = ((icmp_ln6616_3_reg_2048 == 1'd1) & (icmp_ln6614_3_reg_2044 == 1'd0) & (icmp_ln6612_3_reg_2040 == 1'd0) & (icmp_ln6610_3_reg_2036 == 1'd0) & (icmp_ln6608_3_reg_2032 == 1'd0) & (icmp_ln6606_3_reg_2028 == 1'd0) & (icmp_ln6604_3_reg_2024 == 1'd0) & (icmp_ln6602_3_reg_2020 == 1'd0) & (icmp_ln6600_3_reg_2016 == 1'd0));
end

always @ (*) begin
    ap_condition_1647 = ((icmp_ln6618_3_reg_2052 == 1'd1) & (icmp_ln6616_3_reg_2048 == 1'd0) & (icmp_ln6614_3_reg_2044 == 1'd0) & (icmp_ln6612_3_reg_2040 == 1'd0) & (icmp_ln6610_3_reg_2036 == 1'd0) & (icmp_ln6608_3_reg_2032 == 1'd0) & (icmp_ln6606_3_reg_2028 == 1'd0) & (icmp_ln6604_3_reg_2024 == 1'd0) & (icmp_ln6602_3_reg_2020 == 1'd0) & (icmp_ln6600_3_reg_2016 == 1'd0));
end

always @ (*) begin
    ap_condition_1659 = ((icmp_ln6620_3_reg_2056 == 1'd1) & (icmp_ln6618_3_reg_2052 == 1'd0) & (icmp_ln6616_3_reg_2048 == 1'd0) & (icmp_ln6614_3_reg_2044 == 1'd0) & (icmp_ln6612_3_reg_2040 == 1'd0) & (icmp_ln6610_3_reg_2036 == 1'd0) & (icmp_ln6608_3_reg_2032 == 1'd0) & (icmp_ln6606_3_reg_2028 == 1'd0) & (icmp_ln6604_3_reg_2024 == 1'd0) & (icmp_ln6602_3_reg_2020 == 1'd0) & (icmp_ln6600_3_reg_2016 == 1'd0));
end

always @ (*) begin
    ap_condition_1672 = ((icmp_ln6622_3_reg_2060 == 1'd1) & (icmp_ln6620_3_reg_2056 == 1'd0) & (icmp_ln6618_3_reg_2052 == 1'd0) & (icmp_ln6616_3_reg_2048 == 1'd0) & (icmp_ln6614_3_reg_2044 == 1'd0) & (icmp_ln6612_3_reg_2040 == 1'd0) & (icmp_ln6610_3_reg_2036 == 1'd0) & (icmp_ln6608_3_reg_2032 == 1'd0) & (icmp_ln6606_3_reg_2028 == 1'd0) & (icmp_ln6604_3_reg_2024 == 1'd0) & (icmp_ln6602_3_reg_2020 == 1'd0) & (icmp_ln6600_3_reg_2016 == 1'd0));
end

always @ (*) begin
    ap_condition_1686 = ((icmp_ln6624_3_reg_2064 == 1'd1) & (icmp_ln6622_3_reg_2060 == 1'd0) & (icmp_ln6620_3_reg_2056 == 1'd0) & (icmp_ln6618_3_reg_2052 == 1'd0) & (icmp_ln6616_3_reg_2048 == 1'd0) & (icmp_ln6614_3_reg_2044 == 1'd0) & (icmp_ln6612_3_reg_2040 == 1'd0) & (icmp_ln6610_3_reg_2036 == 1'd0) & (icmp_ln6608_3_reg_2032 == 1'd0) & (icmp_ln6606_3_reg_2028 == 1'd0) & (icmp_ln6604_3_reg_2024 == 1'd0) & (icmp_ln6602_3_reg_2020 == 1'd0) & (icmp_ln6600_3_reg_2016 == 1'd0));
end

always @ (*) begin
    ap_condition_1701 = ((icmp_ln6626_3_reg_2068 == 1'd1) & (icmp_ln6624_3_reg_2064 == 1'd0) & (icmp_ln6622_3_reg_2060 == 1'd0) & (icmp_ln6620_3_reg_2056 == 1'd0) & (icmp_ln6618_3_reg_2052 == 1'd0) & (icmp_ln6616_3_reg_2048 == 1'd0) & (icmp_ln6614_3_reg_2044 == 1'd0) & (icmp_ln6612_3_reg_2040 == 1'd0) & (icmp_ln6610_3_reg_2036 == 1'd0) & (icmp_ln6608_3_reg_2032 == 1'd0) & (icmp_ln6606_3_reg_2028 == 1'd0) & (icmp_ln6604_3_reg_2024 == 1'd0) & (icmp_ln6602_3_reg_2020 == 1'd0) & (icmp_ln6600_3_reg_2016 == 1'd0));
end

always @ (*) begin
    ap_condition_1716 = ((icmp_ln6626_2_reg_2007 == 1'd0) & (icmp_ln6624_2_reg_2003 == 1'd0) & (icmp_ln6622_2_reg_1999 == 1'd0) & (icmp_ln6620_2_reg_1995 == 1'd0) & (icmp_ln6618_2_reg_1991 == 1'd0) & (icmp_ln6616_2_reg_1987 == 1'd0) & (icmp_ln6614_2_reg_1983 == 1'd0) & (icmp_ln6612_2_reg_1979 == 1'd0) & (icmp_ln6610_2_reg_1975 == 1'd0) & (icmp_ln6608_2_reg_1971 == 1'd0) & (icmp_ln6606_2_reg_1967 == 1'd0) & (icmp_ln6604_2_reg_1963 == 1'd0) & (icmp_ln6602_2_reg_1959 == 1'd0) & (icmp_ln6600_2_reg_1955 == 1'd0));
end

always @ (*) begin
    ap_condition_1721 = ((icmp_ln6604_2_reg_1963 == 1'd1) & (icmp_ln6602_2_reg_1959 == 1'd0) & (icmp_ln6600_2_reg_1955 == 1'd0));
end

always @ (*) begin
    ap_condition_1726 = ((icmp_ln6606_2_reg_1967 == 1'd1) & (icmp_ln6604_2_reg_1963 == 1'd0) & (icmp_ln6602_2_reg_1959 == 1'd0) & (icmp_ln6600_2_reg_1955 == 1'd0));
end

always @ (*) begin
    ap_condition_1732 = ((icmp_ln6608_2_reg_1971 == 1'd1) & (icmp_ln6606_2_reg_1967 == 1'd0) & (icmp_ln6604_2_reg_1963 == 1'd0) & (icmp_ln6602_2_reg_1959 == 1'd0) & (icmp_ln6600_2_reg_1955 == 1'd0));
end

always @ (*) begin
    ap_condition_1739 = ((icmp_ln6610_2_reg_1975 == 1'd1) & (icmp_ln6608_2_reg_1971 == 1'd0) & (icmp_ln6606_2_reg_1967 == 1'd0) & (icmp_ln6604_2_reg_1963 == 1'd0) & (icmp_ln6602_2_reg_1959 == 1'd0) & (icmp_ln6600_2_reg_1955 == 1'd0));
end

always @ (*) begin
    ap_condition_1747 = ((icmp_ln6612_2_reg_1979 == 1'd1) & (icmp_ln6610_2_reg_1975 == 1'd0) & (icmp_ln6608_2_reg_1971 == 1'd0) & (icmp_ln6606_2_reg_1967 == 1'd0) & (icmp_ln6604_2_reg_1963 == 1'd0) & (icmp_ln6602_2_reg_1959 == 1'd0) & (icmp_ln6600_2_reg_1955 == 1'd0));
end

always @ (*) begin
    ap_condition_1756 = ((icmp_ln6614_2_reg_1983 == 1'd1) & (icmp_ln6612_2_reg_1979 == 1'd0) & (icmp_ln6610_2_reg_1975 == 1'd0) & (icmp_ln6608_2_reg_1971 == 1'd0) & (icmp_ln6606_2_reg_1967 == 1'd0) & (icmp_ln6604_2_reg_1963 == 1'd0) & (icmp_ln6602_2_reg_1959 == 1'd0) & (icmp_ln6600_2_reg_1955 == 1'd0));
end

always @ (*) begin
    ap_condition_1766 = ((icmp_ln6616_2_reg_1987 == 1'd1) & (icmp_ln6614_2_reg_1983 == 1'd0) & (icmp_ln6612_2_reg_1979 == 1'd0) & (icmp_ln6610_2_reg_1975 == 1'd0) & (icmp_ln6608_2_reg_1971 == 1'd0) & (icmp_ln6606_2_reg_1967 == 1'd0) & (icmp_ln6604_2_reg_1963 == 1'd0) & (icmp_ln6602_2_reg_1959 == 1'd0) & (icmp_ln6600_2_reg_1955 == 1'd0));
end

always @ (*) begin
    ap_condition_1777 = ((icmp_ln6618_2_reg_1991 == 1'd1) & (icmp_ln6616_2_reg_1987 == 1'd0) & (icmp_ln6614_2_reg_1983 == 1'd0) & (icmp_ln6612_2_reg_1979 == 1'd0) & (icmp_ln6610_2_reg_1975 == 1'd0) & (icmp_ln6608_2_reg_1971 == 1'd0) & (icmp_ln6606_2_reg_1967 == 1'd0) & (icmp_ln6604_2_reg_1963 == 1'd0) & (icmp_ln6602_2_reg_1959 == 1'd0) & (icmp_ln6600_2_reg_1955 == 1'd0));
end

always @ (*) begin
    ap_condition_1789 = ((icmp_ln6620_2_reg_1995 == 1'd1) & (icmp_ln6618_2_reg_1991 == 1'd0) & (icmp_ln6616_2_reg_1987 == 1'd0) & (icmp_ln6614_2_reg_1983 == 1'd0) & (icmp_ln6612_2_reg_1979 == 1'd0) & (icmp_ln6610_2_reg_1975 == 1'd0) & (icmp_ln6608_2_reg_1971 == 1'd0) & (icmp_ln6606_2_reg_1967 == 1'd0) & (icmp_ln6604_2_reg_1963 == 1'd0) & (icmp_ln6602_2_reg_1959 == 1'd0) & (icmp_ln6600_2_reg_1955 == 1'd0));
end

always @ (*) begin
    ap_condition_1802 = ((icmp_ln6622_2_reg_1999 == 1'd1) & (icmp_ln6620_2_reg_1995 == 1'd0) & (icmp_ln6618_2_reg_1991 == 1'd0) & (icmp_ln6616_2_reg_1987 == 1'd0) & (icmp_ln6614_2_reg_1983 == 1'd0) & (icmp_ln6612_2_reg_1979 == 1'd0) & (icmp_ln6610_2_reg_1975 == 1'd0) & (icmp_ln6608_2_reg_1971 == 1'd0) & (icmp_ln6606_2_reg_1967 == 1'd0) & (icmp_ln6604_2_reg_1963 == 1'd0) & (icmp_ln6602_2_reg_1959 == 1'd0) & (icmp_ln6600_2_reg_1955 == 1'd0));
end

always @ (*) begin
    ap_condition_1816 = ((icmp_ln6624_2_reg_2003 == 1'd1) & (icmp_ln6622_2_reg_1999 == 1'd0) & (icmp_ln6620_2_reg_1995 == 1'd0) & (icmp_ln6618_2_reg_1991 == 1'd0) & (icmp_ln6616_2_reg_1987 == 1'd0) & (icmp_ln6614_2_reg_1983 == 1'd0) & (icmp_ln6612_2_reg_1979 == 1'd0) & (icmp_ln6610_2_reg_1975 == 1'd0) & (icmp_ln6608_2_reg_1971 == 1'd0) & (icmp_ln6606_2_reg_1967 == 1'd0) & (icmp_ln6604_2_reg_1963 == 1'd0) & (icmp_ln6602_2_reg_1959 == 1'd0) & (icmp_ln6600_2_reg_1955 == 1'd0));
end

always @ (*) begin
    ap_condition_1831 = ((icmp_ln6626_2_reg_2007 == 1'd1) & (icmp_ln6624_2_reg_2003 == 1'd0) & (icmp_ln6622_2_reg_1999 == 1'd0) & (icmp_ln6620_2_reg_1995 == 1'd0) & (icmp_ln6618_2_reg_1991 == 1'd0) & (icmp_ln6616_2_reg_1987 == 1'd0) & (icmp_ln6614_2_reg_1983 == 1'd0) & (icmp_ln6612_2_reg_1979 == 1'd0) & (icmp_ln6610_2_reg_1975 == 1'd0) & (icmp_ln6608_2_reg_1971 == 1'd0) & (icmp_ln6606_2_reg_1967 == 1'd0) & (icmp_ln6604_2_reg_1963 == 1'd0) & (icmp_ln6602_2_reg_1959 == 1'd0) & (icmp_ln6600_2_reg_1955 == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_phi_reg_pp0_iter2_retval_0_i46_i110_i_reg_403 = 'bx;

assign ap_phi_reg_pp0_iter2_retval_0_i46_i_i_reg_305 = 'bx;

assign ap_phi_reg_pp0_iter2_retval_0_i_i62_i_reg_354 = 'bx;

assign ap_phi_reg_pp0_iter2_retval_0_i_i_i_reg_256 = 'bx;

assign ap_phi_reg_pp0_iter3_cand2_cost_1_reg_452 = 'bx;

assign bitcost = zext_ln6704_reg_2102_pp0_iter8_reg;

assign cand1_cost_fu_1703_p3 = {{add_ln6671_fu_1697_p2}, {19'd0}};

assign cand2_cost_fu_1724_p3 = {{add_ln6671_1_fu_1718_p2}, {19'd0}};

assign grp_fu_461_p0 = zext_ln6704_fu_1747_p1;

assign grp_fu_465_p0 = zext_ln6704_fu_1747_p1;

assign icmp_ln6600_1_fu_835_p2 = (($signed(tmp_15_fu_825_p4) > $signed(17'd0)) ? 1'b1 : 1'b0);

assign icmp_ln6600_2_fu_1121_p2 = (($signed(tmp_30_fu_1111_p4) > $signed(17'd0)) ? 1'b1 : 1'b0);

assign icmp_ln6600_3_fu_1361_p2 = (($signed(tmp_45_fu_1351_p4) > $signed(17'd0)) ? 1'b1 : 1'b0);

assign icmp_ln6600_fu_595_p2 = (($signed(tmp_fu_585_p4) > $signed(17'd0)) ? 1'b1 : 1'b0);

assign icmp_ln6602_1_fu_851_p2 = (($signed(tmp_16_fu_841_p4) > $signed(18'd0)) ? 1'b1 : 1'b0);

assign icmp_ln6602_2_fu_1137_p2 = (($signed(tmp_31_fu_1127_p4) > $signed(18'd0)) ? 1'b1 : 1'b0);

assign icmp_ln6602_3_fu_1377_p2 = (($signed(tmp_46_fu_1367_p4) > $signed(18'd0)) ? 1'b1 : 1'b0);

assign icmp_ln6602_fu_611_p2 = (($signed(tmp_1_fu_601_p4) > $signed(18'd0)) ? 1'b1 : 1'b0);

assign icmp_ln6604_1_fu_867_p2 = (($signed(tmp_17_fu_857_p4) > $signed(19'd0)) ? 1'b1 : 1'b0);

assign icmp_ln6604_2_fu_1153_p2 = (($signed(tmp_32_fu_1143_p4) > $signed(19'd0)) ? 1'b1 : 1'b0);

assign icmp_ln6604_3_fu_1393_p2 = (($signed(tmp_47_fu_1383_p4) > $signed(19'd0)) ? 1'b1 : 1'b0);

assign icmp_ln6604_fu_627_p2 = (($signed(tmp_2_fu_617_p4) > $signed(19'd0)) ? 1'b1 : 1'b0);

assign icmp_ln6606_1_fu_883_p2 = (($signed(tmp_18_fu_873_p4) > $signed(20'd0)) ? 1'b1 : 1'b0);

assign icmp_ln6606_2_fu_1169_p2 = (($signed(tmp_33_fu_1159_p4) > $signed(20'd0)) ? 1'b1 : 1'b0);

assign icmp_ln6606_3_fu_1409_p2 = (($signed(tmp_48_fu_1399_p4) > $signed(20'd0)) ? 1'b1 : 1'b0);

assign icmp_ln6606_fu_643_p2 = (($signed(tmp_3_fu_633_p4) > $signed(20'd0)) ? 1'b1 : 1'b0);

assign icmp_ln6608_1_fu_899_p2 = (($signed(tmp_19_fu_889_p4) > $signed(21'd0)) ? 1'b1 : 1'b0);

assign icmp_ln6608_2_fu_1185_p2 = (($signed(tmp_34_fu_1175_p4) > $signed(21'd0)) ? 1'b1 : 1'b0);

assign icmp_ln6608_3_fu_1425_p2 = (($signed(tmp_49_fu_1415_p4) > $signed(21'd0)) ? 1'b1 : 1'b0);

assign icmp_ln6608_fu_659_p2 = (($signed(tmp_4_fu_649_p4) > $signed(21'd0)) ? 1'b1 : 1'b0);

assign icmp_ln6610_1_fu_915_p2 = (($signed(tmp_20_fu_905_p4) > $signed(22'd0)) ? 1'b1 : 1'b0);

assign icmp_ln6610_2_fu_1201_p2 = (($signed(tmp_35_fu_1191_p4) > $signed(22'd0)) ? 1'b1 : 1'b0);

assign icmp_ln6610_3_fu_1441_p2 = (($signed(tmp_50_fu_1431_p4) > $signed(22'd0)) ? 1'b1 : 1'b0);

assign icmp_ln6610_fu_675_p2 = (($signed(tmp_5_fu_665_p4) > $signed(22'd0)) ? 1'b1 : 1'b0);

assign icmp_ln6612_1_fu_931_p2 = (($signed(tmp_21_fu_921_p4) > $signed(23'd0)) ? 1'b1 : 1'b0);

assign icmp_ln6612_2_fu_1217_p2 = (($signed(tmp_36_fu_1207_p4) > $signed(23'd0)) ? 1'b1 : 1'b0);

assign icmp_ln6612_3_fu_1457_p2 = (($signed(tmp_51_fu_1447_p4) > $signed(23'd0)) ? 1'b1 : 1'b0);

assign icmp_ln6612_fu_691_p2 = (($signed(tmp_6_fu_681_p4) > $signed(23'd0)) ? 1'b1 : 1'b0);

assign icmp_ln6614_1_fu_947_p2 = (($signed(tmp_22_fu_937_p4) > $signed(24'd0)) ? 1'b1 : 1'b0);

assign icmp_ln6614_2_fu_1233_p2 = (($signed(tmp_37_fu_1223_p4) > $signed(24'd0)) ? 1'b1 : 1'b0);

assign icmp_ln6614_3_fu_1473_p2 = (($signed(tmp_52_fu_1463_p4) > $signed(24'd0)) ? 1'b1 : 1'b0);

assign icmp_ln6614_fu_707_p2 = (($signed(tmp_7_fu_697_p4) > $signed(24'd0)) ? 1'b1 : 1'b0);

assign icmp_ln6616_1_fu_963_p2 = (($signed(tmp_23_fu_953_p4) > $signed(25'd0)) ? 1'b1 : 1'b0);

assign icmp_ln6616_2_fu_1249_p2 = (($signed(tmp_38_fu_1239_p4) > $signed(25'd0)) ? 1'b1 : 1'b0);

assign icmp_ln6616_3_fu_1489_p2 = (($signed(tmp_53_fu_1479_p4) > $signed(25'd0)) ? 1'b1 : 1'b0);

assign icmp_ln6616_fu_723_p2 = (($signed(tmp_8_fu_713_p4) > $signed(25'd0)) ? 1'b1 : 1'b0);

assign icmp_ln6618_1_fu_979_p2 = (($signed(tmp_24_fu_969_p4) > $signed(26'd0)) ? 1'b1 : 1'b0);

assign icmp_ln6618_2_fu_1265_p2 = (($signed(tmp_39_fu_1255_p4) > $signed(26'd0)) ? 1'b1 : 1'b0);

assign icmp_ln6618_3_fu_1505_p2 = (($signed(tmp_54_fu_1495_p4) > $signed(26'd0)) ? 1'b1 : 1'b0);

assign icmp_ln6618_fu_739_p2 = (($signed(tmp_9_fu_729_p4) > $signed(26'd0)) ? 1'b1 : 1'b0);

assign icmp_ln6620_1_fu_995_p2 = (($signed(tmp_25_fu_985_p4) > $signed(27'd0)) ? 1'b1 : 1'b0);

assign icmp_ln6620_2_fu_1281_p2 = (($signed(tmp_40_fu_1271_p4) > $signed(27'd0)) ? 1'b1 : 1'b0);

assign icmp_ln6620_3_fu_1521_p2 = (($signed(tmp_55_fu_1511_p4) > $signed(27'd0)) ? 1'b1 : 1'b0);

assign icmp_ln6620_fu_755_p2 = (($signed(tmp_10_fu_745_p4) > $signed(27'd0)) ? 1'b1 : 1'b0);

assign icmp_ln6622_1_fu_1011_p2 = (($signed(tmp_26_fu_1001_p4) > $signed(28'd0)) ? 1'b1 : 1'b0);

assign icmp_ln6622_2_fu_1297_p2 = (($signed(tmp_41_fu_1287_p4) > $signed(28'd0)) ? 1'b1 : 1'b0);

assign icmp_ln6622_3_fu_1537_p2 = (($signed(tmp_56_fu_1527_p4) > $signed(28'd0)) ? 1'b1 : 1'b0);

assign icmp_ln6622_fu_771_p2 = (($signed(tmp_11_fu_761_p4) > $signed(28'd0)) ? 1'b1 : 1'b0);

assign icmp_ln6624_1_fu_1027_p2 = (($signed(tmp_27_fu_1017_p4) > $signed(29'd0)) ? 1'b1 : 1'b0);

assign icmp_ln6624_2_fu_1313_p2 = (($signed(tmp_42_fu_1303_p4) > $signed(29'd0)) ? 1'b1 : 1'b0);

assign icmp_ln6624_3_fu_1553_p2 = (($signed(tmp_57_fu_1543_p4) > $signed(29'd0)) ? 1'b1 : 1'b0);

assign icmp_ln6624_fu_787_p2 = (($signed(tmp_12_fu_777_p4) > $signed(29'd0)) ? 1'b1 : 1'b0);

assign icmp_ln6626_1_fu_1043_p2 = (($signed(tmp_28_fu_1033_p4) > $signed(30'd0)) ? 1'b1 : 1'b0);

assign icmp_ln6626_2_fu_1329_p2 = (($signed(tmp_43_fu_1319_p4) > $signed(30'd0)) ? 1'b1 : 1'b0);

assign icmp_ln6626_3_fu_1569_p2 = (($signed(tmp_58_fu_1559_p4) > $signed(30'd0)) ? 1'b1 : 1'b0);

assign icmp_ln6626_fu_803_p2 = (($signed(tmp_13_fu_793_p4) > $signed(30'd0)) ? 1'b1 : 1'b0);

assign icmp_ln6628_1_fu_1059_p2 = (($signed(tmp_29_fu_1049_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln6628_2_fu_1345_p2 = (($signed(tmp_44_fu_1335_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln6628_3_fu_1585_p2 = (($signed(tmp_59_fu_1575_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln6628_fu_819_p2 = (($signed(tmp_14_fu_809_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln6664_1_fu_1099_p2 = ((abs8_fu_1075_p3 == 32'd1) ? 1'b1 : 1'b0);

assign icmp_ln6664_fu_573_p2 = ((abs_fu_549_p3 == 32'd1) ? 1'b1 : 1'b0);

assign icmp_ln6665_1_fu_1105_p2 = ((abs11_fu_1092_p3 == 32'd1) ? 1'b1 : 1'b0);

assign icmp_ln6665_fu_579_p2 = ((abs5_fu_566_p3 == 32'd1) ? 1'b1 : 1'b0);

assign icmp_ln6682_1_fu_487_p0 = mv_cand_1;

assign icmp_ln6682_1_fu_487_p1 = mv_cand_3;

assign icmp_ln6682_1_fu_487_p2 = ((icmp_ln6682_1_fu_487_p0 == icmp_ln6682_1_fu_487_p1) ? 1'b1 : 1'b0);

assign icmp_ln6682_fu_481_p0 = mv_cand_0;

assign icmp_ln6682_fu_481_p1 = mv_cand_2;

assign icmp_ln6682_fu_481_p2 = ((icmp_ln6682_fu_481_p0 == icmp_ln6682_fu_481_p1) ? 1'b1 : 1'b0);

assign icmp_ln6704_fu_1733_p2 = ((cand1_cost_fu_1703_p3 < ap_phi_mux_cand2_cost_1_phi_fu_455_p4) ? 1'b1 : 1'b0);

assign mvd_cost_int64 = ($signed(mul_ln6756_reg_2109) + $signed(sext_ln6756_fu_1762_p1));

assign neg3_fu_556_p2 = (32'd0 - sub_ln6691_reg_1792);

assign neg6_fu_1065_p2 = (32'd0 - sub_ln6699_reg_1799);

assign neg9_fu_1082_p2 = (32'd0 - sub_ln6700_reg_1806);

assign neg_fu_539_p2 = (32'd0 - sub_ln6690_reg_1785);

assign same_cand_fu_493_p2 = (icmp_ln6682_fu_481_p2 & icmp_ln6682_1_fu_487_p2);

assign select_ln6600_1_fu_1648_p3 = ((icmp_ln6665_1_reg_1950[0:0] == 1'b1) ? 18'd32768 : 18'd0);

assign select_ln6600_fu_1598_p3 = ((icmp_ln6665_reg_1818[0:0] == 1'b1) ? 18'd32768 : 18'd0);

assign select_ln6628_1_fu_1613_p3 = ((icmp_ln6628_1_reg_1940[0:0] == 1'b1) ? 20'd65536 : 20'd0);

assign select_ln6628_2_fu_1655_p3 = ((icmp_ln6628_2_reg_2011[0:0] == 1'b1) ? 20'd65536 : 20'd0);

assign select_ln6628_3_fu_1663_p3 = ((icmp_ln6628_3_reg_2072[0:0] == 1'b1) ? 20'd65536 : 20'd0);

assign select_ln6628_fu_1605_p3 = ((icmp_ln6628_reg_1879[0:0] == 1'b1) ? 20'd65536 : 20'd0);

assign select_ln6665_1_fu_1641_p3 = ((icmp_ln6664_1_reg_1945[0:0] == 1'b1) ? 18'd163840 : 18'd131072);

assign select_ln6665_fu_1591_p3 = ((icmp_ln6664_reg_1813[0:0] == 1'b1) ? 18'd163840 : 18'd131072);

assign select_ln6704_fu_1739_p3 = ((icmp_ln6704_fu_1733_p2[0:0] == 1'b1) ? cand1_cost_fu_1703_p3 : ap_phi_mux_cand2_cost_1_phi_fu_455_p4);

assign sext_ln6690_fu_499_p0 = mv_cand_0;

assign sext_ln6690_fu_499_p1 = sext_ln6690_fu_499_p0;

assign sext_ln6691_fu_509_p0 = mv_cand_1;

assign sext_ln6691_fu_509_p1 = sext_ln6691_fu_509_p0;

assign sext_ln6699_fu_519_p0 = mv_cand_2;

assign sext_ln6699_fu_519_p1 = sext_ln6699_fu_519_p0;

assign sext_ln6700_fu_529_p0 = mv_cand_3;

assign sext_ln6700_fu_529_p1 = sext_ln6700_fu_529_p0;

assign sext_ln6756_fu_1762_p1 = $signed(trunc_ln_reg_2114);

assign shl_ln6730_fu_469_p2 = x << mv_shift;

assign shl_ln6731_fu_475_p2 = y << mv_shift;

assign sub_ln6690_fu_503_p2 = ($signed(shl_ln6730_fu_469_p2) - $signed(sext_ln6690_fu_499_p1));

assign sub_ln6691_fu_513_p2 = ($signed(shl_ln6731_fu_475_p2) - $signed(sext_ln6691_fu_509_p1));

assign sub_ln6699_fu_523_p2 = ($signed(shl_ln6730_fu_469_p2) - $signed(sext_ln6699_fu_519_p1));

assign sub_ln6700_fu_533_p2 = ($signed(shl_ln6731_fu_475_p2) - $signed(sext_ln6700_fu_529_p1));

assign tmp_10_fu_745_p4 = {{abs_fu_549_p3[31:5]}};

assign tmp_11_fu_761_p4 = {{abs_fu_549_p3[31:4]}};

assign tmp_12_fu_777_p4 = {{abs_fu_549_p3[31:3]}};

assign tmp_13_fu_793_p4 = {{abs_fu_549_p3[31:2]}};

assign tmp_14_fu_809_p4 = {{abs_fu_549_p3[31:1]}};

assign tmp_15_fu_825_p4 = {{abs5_fu_566_p3[31:15]}};

assign tmp_16_fu_841_p4 = {{abs5_fu_566_p3[31:14]}};

assign tmp_17_fu_857_p4 = {{abs5_fu_566_p3[31:13]}};

assign tmp_18_fu_873_p4 = {{abs5_fu_566_p3[31:12]}};

assign tmp_19_fu_889_p4 = {{abs5_fu_566_p3[31:11]}};

assign tmp_1_fu_601_p4 = {{abs_fu_549_p3[31:14]}};

assign tmp_20_fu_905_p4 = {{abs5_fu_566_p3[31:10]}};

assign tmp_21_fu_921_p4 = {{abs5_fu_566_p3[31:9]}};

assign tmp_22_fu_937_p4 = {{abs5_fu_566_p3[31:8]}};

assign tmp_23_fu_953_p4 = {{abs5_fu_566_p3[31:7]}};

assign tmp_24_fu_969_p4 = {{abs5_fu_566_p3[31:6]}};

assign tmp_25_fu_985_p4 = {{abs5_fu_566_p3[31:5]}};

assign tmp_26_fu_1001_p4 = {{abs5_fu_566_p3[31:4]}};

assign tmp_27_fu_1017_p4 = {{abs5_fu_566_p3[31:3]}};

assign tmp_28_fu_1033_p4 = {{abs5_fu_566_p3[31:2]}};

assign tmp_29_fu_1049_p4 = {{abs5_fu_566_p3[31:1]}};

assign tmp_2_fu_617_p4 = {{abs_fu_549_p3[31:13]}};

assign tmp_30_fu_1111_p4 = {{abs8_fu_1075_p3[31:15]}};

assign tmp_31_fu_1127_p4 = {{abs8_fu_1075_p3[31:14]}};

assign tmp_32_fu_1143_p4 = {{abs8_fu_1075_p3[31:13]}};

assign tmp_33_fu_1159_p4 = {{abs8_fu_1075_p3[31:12]}};

assign tmp_34_fu_1175_p4 = {{abs8_fu_1075_p3[31:11]}};

assign tmp_35_fu_1191_p4 = {{abs8_fu_1075_p3[31:10]}};

assign tmp_36_fu_1207_p4 = {{abs8_fu_1075_p3[31:9]}};

assign tmp_37_fu_1223_p4 = {{abs8_fu_1075_p3[31:8]}};

assign tmp_38_fu_1239_p4 = {{abs8_fu_1075_p3[31:7]}};

assign tmp_39_fu_1255_p4 = {{abs8_fu_1075_p3[31:6]}};

assign tmp_3_fu_633_p4 = {{abs_fu_549_p3[31:12]}};

assign tmp_40_fu_1271_p4 = {{abs8_fu_1075_p3[31:5]}};

assign tmp_41_fu_1287_p4 = {{abs8_fu_1075_p3[31:4]}};

assign tmp_42_fu_1303_p4 = {{abs8_fu_1075_p3[31:3]}};

assign tmp_43_fu_1319_p4 = {{abs8_fu_1075_p3[31:2]}};

assign tmp_44_fu_1335_p4 = {{abs8_fu_1075_p3[31:1]}};

assign tmp_45_fu_1351_p4 = {{abs11_fu_1092_p3[31:15]}};

assign tmp_46_fu_1367_p4 = {{abs11_fu_1092_p3[31:14]}};

assign tmp_47_fu_1383_p4 = {{abs11_fu_1092_p3[31:13]}};

assign tmp_48_fu_1399_p4 = {{abs11_fu_1092_p3[31:12]}};

assign tmp_49_fu_1415_p4 = {{abs11_fu_1092_p3[31:11]}};

assign tmp_4_fu_649_p4 = {{abs_fu_549_p3[31:11]}};

assign tmp_50_fu_1431_p4 = {{abs11_fu_1092_p3[31:10]}};

assign tmp_51_fu_1447_p4 = {{abs11_fu_1092_p3[31:9]}};

assign tmp_52_fu_1463_p4 = {{abs11_fu_1092_p3[31:8]}};

assign tmp_53_fu_1479_p4 = {{abs11_fu_1092_p3[31:7]}};

assign tmp_54_fu_1495_p4 = {{abs11_fu_1092_p3[31:6]}};

assign tmp_55_fu_1511_p4 = {{abs11_fu_1092_p3[31:5]}};

assign tmp_56_fu_1527_p4 = {{abs11_fu_1092_p3[31:4]}};

assign tmp_57_fu_1543_p4 = {{abs11_fu_1092_p3[31:3]}};

assign tmp_58_fu_1559_p4 = {{abs11_fu_1092_p3[31:2]}};

assign tmp_59_fu_1575_p4 = {{abs11_fu_1092_p3[31:1]}};

assign tmp_5_fu_665_p4 = {{abs_fu_549_p3[31:10]}};

assign tmp_6_fu_681_p4 = {{abs_fu_549_p3[31:9]}};

assign tmp_7_fu_697_p4 = {{abs_fu_549_p3[31:8]}};

assign tmp_8_fu_713_p4 = {{abs_fu_549_p3[31:7]}};

assign tmp_9_fu_729_p4 = {{abs_fu_549_p3[31:6]}};

assign tmp_fu_585_p4 = {{abs_fu_549_p3[31:15]}};

assign zext_ln6670_1_fu_1671_p1 = ap_phi_mux_retval_0_i_i62_i_phi_fu_357_p30;

assign zext_ln6670_fu_1621_p1 = ap_phi_mux_retval_0_i_i_i_phi_fu_259_p30;

assign zext_ln6671_1_fu_1691_p1 = add_ln6671_2_reg_2077;

assign zext_ln6671_2_fu_1694_p1 = add_ln6671_3_reg_2082;

assign zext_ln6671_3_fu_1675_p1 = ap_phi_mux_retval_0_i46_i110_i_phi_fu_406_p30;

assign zext_ln6671_4_fu_1712_p1 = add_ln6671_4_reg_2087;

assign zext_ln6671_5_fu_1715_p1 = add_ln6671_5_reg_2092;

assign zext_ln6671_fu_1625_p1 = ap_phi_mux_retval_0_i46_i_i_phi_fu_308_p30;

assign zext_ln6704_fu_1747_p1 = select_ln6704_reg_2097;

always @ (posedge ap_clk) begin
    add_ln6671_2_reg_2077[14:0] <= 15'b000000000000000;
    add_ln6671_4_reg_2087[14:0] <= 15'b000000000000000;
    zext_ln6704_reg_2102[63:41] <= 23'b00000000000000000000000;
    zext_ln6704_reg_2102_pp0_iter5_reg[63:41] <= 23'b00000000000000000000000;
    zext_ln6704_reg_2102_pp0_iter6_reg[63:41] <= 23'b00000000000000000000000;
    zext_ln6704_reg_2102_pp0_iter7_reg[63:41] <= 23'b00000000000000000000000;
    zext_ln6704_reg_2102_pp0_iter8_reg[63:41] <= 23'b00000000000000000000000;
end

endmodule //calc_mvd_cost_int64_hls
